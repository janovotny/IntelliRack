VAR RETAIN
	initPosition	:ARRAY [0..3] OF UINT;	
END_VAR

VAR CONSTANT
	sTEP_INIT	:USINT	:=0;	
	sTEP_EMERGENCY_STOP	:UINT	:=250;	
	sTEP_ERROR	:USINT	:=255;	
	sTEP_MOVE_REFERENCE	:USINT	:=12;	
	mODE_MOVE_POSITION	:SINT	:=1;	
	sTEP_WAIT	:USINT	:=20;	
	sTEP_SET_REFERENCE_POSITION	:USINT	:=14;	
	sTEP_SHUTDOWN	:UINT	:=25;	
	mOVING_OFFSET	:REAL	:=0.5;	
	sTEP_MOVE_APPROX_POS	:USINT	:=21;	
	sTEP_MOVE_FINE_POS	:USINT	:=22;	
	mODE_SET_POSITION	:SINT	:=-122;	
	mODE_MOVE_JOG	:SINT	:=2;	
	sTEP_MOVE_JOG	:UINT	:=23;	
	sTEP_MOVE_REF	:USINT	:=24;	
END_VAR

VAR
	sStepper	:ARRAY [0..3] OF UINT;	
	idxDrive	:USINT;	
	stStepperStatus	:ARRAY [0..3] OF tStepperStatus;	
	stStepperIfIn	:ARRAY [0..3] OF tStepperIfIn;	
	stStepperControl	:ARRAY [0..3] OF tStepperControl;	
	wireLengthPositionMM	:ARRAY [0..3] OF REAL;	
	referenceSet	:ARRAY [0..3] OF USINT;	
	modeReference	:ARRAY [0..3] OF SINT;	
	timerStartUp	:ARRAY [0..3] OF UDINT;	
	gearZ1	:ARRAY [0..3] OF UDINT;	
	gearZ2	:ARRAY [0..3] OF UDINT;	
	gearSlope	:ARRAY [0..3] OF REAL;	
	microStepPerDriveStep	:ARRAY [0..3] OF UINT;	
	driveStepPerRevolution	:ARRAY [0..3] OF UDINT;	
	gearFactor	:ARRAY [0..3] OF REAL;	
	referencePositionMM	:ARRAY [0..3] OF REAL;	
	pMMI	:UDINT;	
	gPvXGetAdr	:UINT;	
	size	:UINT;	
	firstMovement	:ARRAY [0..3] OF USINT;	
	stStepperIfOut	:ARRAY [0..3] OF tStepperIfOut;	
	wireLengthMM	:ARRAY [0..3] OF REAL;	
	oldWireLengthMM	:ARRAY [0..3] OF REAL;	
	timer	:ARRAY [0..3] OF INT;	
	referencePositionMicroStep	:ARRAY [0..3] OF DINT;	
	movePos	:ARRAY [0..3] OF USINT;	
	wireLengthOffsetMM	:ARRAY [0..3] OF REAL;	
	driveActive	:ARRAY [0..3] OF USINT;	
	speedJogOptions	:ARRAY [0..3] OF DINT;	
	referenceUsed	:ARRAY [0..3] OF BOOL;	
	setPosition	:ARRAY [0..3] OF REAL;	
	oldSetPosition	:ARRAY [0..3] OF REAL;	
	moveStepperPositive	:ARRAY [0..3] OF BOOL;	
	speedJog	:ARRAY [0..3] OF DINT;	
	moveStepperNegative	:ARRAY [0..3] OF BOOL;	
	moveStepperReference	:ARRAY [0..3] OF BOOL;	
	refPoint	:ARRAY [0..3] OF DINT;	
	setPointZero	:ARRAY [0..3] OF BOOL;	
	zeroPoint	:ARRAY [0..3] OF DINT;	
	refPointMove	:ARRAY [0..3] OF DINT;	
	detail1	:USINT;	
	detail2	:USINT;	
	detail4	:USINT;	
	detail3	:USINT;	
	endPointPositive	:ARRAY [0..3] OF DINT;	
	endPointNegative	:ARRAY [0..3] OF DINT;	
END_VAR