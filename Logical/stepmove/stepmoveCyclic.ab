PROGRAM _CYCLIC
(* cyclic program *)

;Wenn die aktuelle Seite die Experimentierseite ist
if currentPage = 0 then

	;Bildschirm bereit zum Bearbeiten
	if ready <> 1 then
		VC_HANDLE = VA_Setup(1, "visu")

		if	VC_HANDLE <> 0 then
			ready = 1
		endif
	endif

	;Wenn Bildschirm bereit zum Bearbeiten
	if ready = 1 then

		;Erster Durchlauf Formen zeichnen
		if test = 0 then
			if VA_Saccess(1, VC_HANDLE)= 0 then

				;Mittelpunkt zeichnen
				VA_Rect(1, VC_HANDLE, 239, 239, 3, 3, fill, color)

				;Aktuelle-Position Form zeichnen
				VA_Rect(1, VC_HANDLE, UINT(position_x), UINT(position_y), width, heigth, fill, color)
				test = 1

				VA_Srelease(1, VC_HANDLE)

			endif
		endif

		;Weitere Durchläufe
		if test = 1 then

			if VA_Saccess(1, VC_HANDLE) = 0 then

				;Welche Taste ist aktuell betätigt
				if fest = 1 then
					bewegen = 0
				else if locker = 1 then
					bewegen = 1
					zeichnen = 1
					VA_Redraw(1, VC_HANDLE)
					VA_Rect(1, VC_HANDLE, 239, 239, 3, 3, fill, color)
					VA_Rect(1, VC_HANDLE, UINT(position_x), UINT(position_y), width, heigth, fill, color)
				endif

				;Abfragen der aktuelle Touch-Position
				VA_GetTouchAction(1, VC_HANDLE, 0, UDINT(adr(touch)))

				;Übergabe der Touch-Position Informationen
				x_position = touch.x
				y_position = touch.y
				touch_status = touch.status

				;Wenn Touchpanel betätigt und bewegen erlaubt
				if touch_status = 1 and bewegen = 1 then

					;Abfrage ob Form gegriffen wurde
					if ((x_position) > position_x) and ((x_position) < (position_x + width)) and ((y_position) > position_y) and ((y_position) < (position_y + heigth)) and (packen_erlaubt = 0) and bewegen = 1 then
						packen_erlaubt = 1
						gepackt_x = x_position - position_x
						gepackt_y = y_position - position_y

						;Überschreiben der Drawbox mit weiss
						VA_Rect(1, VC_HANDLE, 0, 0, 480, 480, 15, 15)

						;Mittelpunkt zeichnen
						VA_Rect(1, VC_HANDLE, 239, 239, 3, 3, fill, color)
					endif

					;Wenn Form gegriffen wurde
					if packen_erlaubt = 1 then

						;Letzte Position der Form löschen
						VA_Rect(1, VC_HANDLE, UINT(position_x), UINT(position_y), width, heigth, 15, 15)

						;Mittelpunkt zeichnen
						VA_Rect(1, VC_HANDLE, 239, 239, 3, 3, fill, color)

						;Berechnen der Form-Position
						x1 = x1 + (x_position - x_position_old)
						y1 = y1 + (y_position - y_position_old)

						position_x = x1 - gepackt_x
						position_y = y1 - gepackt_y

						;Berechnen der Richtung und Schritte für Drehtisch
						x_position_EXP	:=	(EXPT(-240+x_position,2))
						y_position_EXP	:=	(EXPT(-240+y_position,2))
						sqrtergebnis		:=	SQRT(EXPT(-240+x_position,2))/SQRT((y_position_EXP)+(x_position_EXP))

						if (x_position < 240) and (y_position < 240) then
							asdasd					:=	ASIN(sqrtergebnis)
							asd							:=	90
						else if (x_position > 240) and (y_position < 240) then
							asdasd					:=	ACOS(sqrtergebnis)
							asd							:=	0
						else if (x_position > 240) and (y_position > 240) then
							asdasd					:=	ASIN(sqrtergebnis)
							asd							:=	-90
						else if (x_position < 240) and (y_position > 240) then
							asdasd					:=	ACOS(sqrtergebnis)
							asd							:=	-180
						endif

						dasdas 					:= (25600*((360*asdasd/amTWOPI)+asd))/360
						dasdasdasdasda	:=	DINT(dasdas)

						movesteppos			:= 9*dasdasdasdasda

						;Drawbox-Begrenzungen
						if ((x_position - gepackt_x + width) > x_stop) then
							position_x = x_stop - width
						else if ((x_position - gepackt_x) < x_start) then
							position_x = x_start
						endif

						if ((y_position - gepackt_y + heigth) > y_stop) then
							position_y = y_stop - heigth
						else if ((y_position - gepackt_y) < y_start) then
							position_y = y_start
						endif

						;Zeichnen der Form
						VA_Rect(1, VC_HANDLE, UINT(position_x), UINT(position_y), width, heigth, fill, color)

						;Speichern der letztn Position
						x_position_old = x_position
						y_position_old = y_position

					endif

				else
					if packen_erlaubt = 1 then
						packen_erlaubt = 0
					endif
				endif

				VA_Srelease(1, VC_HANDLE)
			endif
		endif
	endif
endif
END_PROGRAM

